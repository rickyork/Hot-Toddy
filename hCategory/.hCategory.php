<?php
  class hCategory extends hPlugin { private $hCategoryDatabase; private $hFileIcon; public function hConstructor() {        hString::scrubArray($_GET); $this->hCategoryDatabase = $this->database('hCategory'); $this->hCategoryDatabase->setDatabaseReturnFormat('getResultsForTemplate'); $this->hCategoryRootId = $this->hCategoryId(0); $this->hCategoryId = isset($_GET['hCategoryId'])? (int) $_GET['hCategoryId'] : (int) $this->hCategoryId(0); if ($this->hCategoryDatabase->categoryExists($this->hCategoryId)) { $this->getPluginCSS(); $this->hCategoryName = $this->hCategoryDatabase->getCategoryName($this->hCategoryId); if (!$this->hCategoryId && $this->hCategoryDefaultName('Categories')) { $this->hCategoryName = $this->hCategoryDefaultName('Categories'); } $fileTitle = $this->hCategoryDefaultName($this->hCategoryName); $this->getSubCategories(); } else { $this->warning("There is no category associated with id '{$this->hCategoryId}'.", __FILE__, __LINE__); } if ($this->hFileBreadcrumbsEnabled(false)) { $this->setCategoryBreadcrumbs(); } if (isset($fileTitle)) { $this->hFileTitle = $fileTitle; } } public function getSubCategories() {        $fileMethod = $this->hCategoryFileRetrievalMethod('getCategoryFiles'); $files = $this->hCategoryDatabase->{"{$fileMethod}"}($this->hCategoryId); $this->hFileDocument = $this->getTemplate( 'Category', array( 'hCategories' => $this->hCategoryDatabase->getSubCategories($this->hCategoryId), 'hCategoryCount' => $this->hCategoryDatabase->getCategoryCount(), 'hFiles' => $files, 'hCategoryFileCount' => $this->hCategoryDatabase->getCategoryFileCount() ) ); } public function setCategoryBreadcrumbs() {        $categories = array();  $line = array(); $categoryId = $this->hCategoryId; for ($i = 0; $categoryId <> $this->hCategoryRootId; $i++) { $data = $this->hCategories->selectAssociative( array( 'hCategoryId', 'hCategoryName', 'hCategoryParentId' ), (int) $categoryId ); if (count($data)) { $line[$data['hCategoryId']] = $data['hCategoryName']; $categoryId = $data['hCategoryParentId']; } if ($i == 50) { break; } } $line = array_reverse($line, true); foreach ($line as $categoryId => $categoryName) { $categories[$this->hFilePath.'?hCategoryId='.$categoryId] = $categoryName; } $this->makeBreadcrumbs($categories, true); } } ?>