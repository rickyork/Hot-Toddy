<?php

#//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
#//\\\       \\\\\\\\|
#//\\\ @@    @@\\\\\\| Hot Toddy Framework
#//\\ @@@@  @@@@\\\\\|
#//\\\@@@@| @@@@\\\\\|
#//\\\ @@ |\\@@\\\\\\| https://github.com/rickyork/Hot-Toddy
#//\\\\  ||   \\\\\\\| Â© Copyright 2019 Richard York, All rights Reserved
#//\\\\  \\_   \\\\\\|
#//\\\\\        \\\\\| Use and redistribution are subject to the terms of the license.
#//\\\\\  ----  \@@@@| https://github.com/rickyork/Hot-Toddy/blob/master/License
#//@@@@@\       \@@@@|
#//@@@@@@\     \@@@@@|
#//\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# @description
# <h1>Calendar View API</h1>
# <p>
#   Provides an API for generating HTML calendar views.  Only month views are supported 
#   at this time.
# </p>
# <p>
#   See: <a href='/Hot Toddy/Documentation?hCalendar/hCalendarView'>hCalendar/hCalendarView</a> 
#   to see the HTML generated by this object.
# </p>
# @end

class hCalendarViewLibrary extends hPlugin {

    private $dateFormats = array();

    # Date formats set according to PHP's date() function, of course.
    public function dateFormats(array $options = array())
    {
        # @return void
        
        # @description
        # <h2>Specifying Date Formats</h2>
        # <p>
        #   This function controls how the calendar will display date information.
        #   Formats can be passed directly into this function via the <var>$options</var>
        #   argument, or specified using framework variables.  Options are set based on 
        #   what you would use to get the desired format from PHP's 
        #   <a href='http://www.php.net/date' class='code'>date()</a> function.
        # </p>
        # <p>
        #   Possible <var>$options</var> are:
        # </p>
        # <ul>
        #   <li>
        #       <p>
        #           <var><b>hCalendarWeekday</b></var>: Sets how weekdays will appear in the calendar's
        #           table headings.
        #       </p>
        #       <p>
        #           Option <var><b>l</b></var> (lowercase L), the default, shows the 
        #           full weekday names <var>Sunday</var>, <var>Monday</var>, <var>Tuesday</var>, 
        #           <var>Wednesday</var>, <var>Thursday</var>, <var>Friday</var>, <var>Saturday</var>.
        #       </p>
        #       <p>
        #           Option <var><b>D</b></var> 
        #           is a three letter abbreviation: <var>Sun</var>, <var>Mon</var>, <var>Tue</var>, 
        #           <var>Wed</var>, <var>Thu</var>, <var>Fri</var>, <var>Sat</var>.
        #       </p>
        #       <p>
        #           Option <var><b>N</b></var> is numeric, Sunday = 1, Saturday = 7.
        #       </p>
        #       <p>
        #           Option <var><b>w</b></var> is numeric offset from zero, Sunday = 0, Saturday = 6.
        #       </p>
        #       <p>
        #           Option <var><b>initial</b></var> (<i>not</i> a PHP 
        #           <a href='http://www.php.net/date' class='code'>date()</a> option) shows only the first letter of 
        #           each, so <var>S</var>, <var>M</var>, <var>T</var>, <var>W</var>, <var>T</var>, 
        #           <var>F</var>, <var>S</var>.
        #       </p>
        #   </li>
        #   <li>
        #       <p>
        #           <var><b>hCalendarDay</b></var>: Sets how days of the month will be displayed within the
        #           calendar.
        #       </p>
        #       <p>
        #           Option <var><b>j</b></var>, the default, is numbers <var>1</var> to <var>31</var> 
        #           without leading zeros on single digit days.
        #       </p>
        #       <p>
        #           Option <var><b>d</b></var>, is numbers <var>01</var> to <var>31</var>, with leading 
        #           zeros on single digit days.
        #       </p>
        #       <p>
        #           Option <var><b>jS</b></var>, is numbers <var>1st</var> to <var>31st</var> with the 
        #           English orginal suffix.
        #       </p>
        #       <p>
        #           Option <var><b>z</b></var>, is the day of the year <var>0</var> through <var>365</var>.
        #       </p>
        #   </li>
        #   <li>
        #       <p>
        #           <var><b>hCalendarMonth</b></var>: Controls how the name of the month is displayed.
        #       </p>
        #       <p>
        #           Option <var><b>F</b></var>, the default, is the full name of the month. <var>January</var>
        #           through <var>December</var>.
        #       </p>
        #       <p>
        #           Option <var><b>M</b></var> is a three-letter abbreviation for the name of the month. 
        #           <var>Jan</var> through <var>Dec</var>.
        #       </p>
        #       <p>
        #           Option <var><b>m</b></var> is numeric with leading zeros.  <var>01</var> to <var>12</var>.
        #       </p>
        #       <p>
        #           Option <var><b>n</b></var> is numeric without leading zeros.  <var>1</var> to <var>12</var>.
        #       </p>
        #   </li>
        #   <li>
        #       <p>
        #           <var><b>hCalendarYear</b></var>: Indicates how the year will be displayed on the calendar.
        #       </p>
        #       <p>
        #           Option <var><b>Y</b></var>, the default, is the four digit year, e.g., <var>2012</var>.
        #       </p>
        #       <p>
        #           Option <var><b>y</b></var>, (lowercase Y) is a two digit representation of the year, <var>12</var>.
        #       </p>
        #   </li>
        # </ul>
        # @end
    
        $this->dateFormats = $options;
        
        if (!isset($this->dateFormats['hCalendarWeekday']))
        {
            $this->dateFormats['hCalendarWeekday'] = $this->hCalendarWeekday('l');
        }

        if (!isset($this->dateFormats['hCalendarDay']))
        {
            $this->dateFormats['hCalendarDay'] = $this->hCalendarDay('j');
        }

        if (!isset($this->dateFormats['hCalendarMonth']))
        {
            $this->dateFormats['hCalendarMonth'] = $this->hCalendarMonth('F');
        }

        if (!isset($this->dateFormats['hCalendarYear']))
        {
            $this->dateFormats['hCalendarYear'] = $this->hCalendarYear('Y');
        }
    }

    public function get($calendarDate = null, $calendarUniqueId = 'hCalendar', $calendarOffset = 0, $calendarEvents = array())
    {
        # @return HTML
        
        # @description
        # <h2>Creating and Retrieving a Calendar View</h2>
        # <p>
        #   The <var>get()</var> method generates and then returns a calendar view created 
        #   in HTML, the view created represents a single month.
        # </p>
        # <p>
        #   <var>$calendarDate</var> is expected to be a Unix timestamp.  If provided, the 
        #   month displayed is derived from the timestamp.  If not provided, the current month
        #   (as determined from system time) is assumed.
        # </p>
        # <p>
        #   <var>$calendarUniqueId</var> makes certain that ids created in HTML <var>id</var>
        #   attributes are unique, the string specified here is added to the <var>id</var> attribute 
        #   to make them unique, making it possible to host multiple calendar views in the same
        #   HTML document.  The unique id is only needed for mutually exclusive calendar views, 
        #   for the same calendar view, different months have unique ids based on the month itself, 
        #   therefore it is possible to have completely unique ids while displaying multiple months 
        #   of a yaer in the same calendar view.  In that situation, it is not necessary to modify 
        #   the <var>$calendarUniqueId</var> string.
        # </p>
        # <p>
        #   <var>$calendarOffset</var> modifies which month is displayed counting forward or backward 
        #   from the unix timestamp provided in <var>$calendarDate</var>.  To go backward <var>$calendarOffest</var>
        #   should be a negative number.  For example, to display two months ago, I'd provide the 
        #   current date in <var>$calendarDate</var> and <var>-2</var> in <var>$calendarOffset</var>.
        # </p>
        # <p>
        #   <var>$calendarEvents</var> is expected to be an array of event dates.  The array values
        #   are expected to be unix timestamps representing the times of an event, the array keys
        #   have no meaning.  If an event is found to take place on a day, that day on the calendar 
        #   receives an additional class name in the HTML <var>class</var> attribute of the 
        #   <var>&lt;td&gt;</var> element, the class name is: <var>hCalendarEvent</var>.  Adding the
        #   <var>hCalendarEvent</var> class name enables days with 
        #   events to be colored differently than days that do not contain events.  This is 
        #   presently the <i>only</i> thing that happens as a result of passing event timestamps.  
        # </p>
        # @end

        if (is_null($calendarDate))
        {        
            $calendarDate = mktime(0, 0, 0, date('n') + (int) $calendarOffset, 1, date('Y'));
        }

        if (!count($this->dateFormats))
        {
            $this->dateFormats();
        }

        $thisMonth           = date('m', $calendarDate);
        $thisYear            = date('Y', $calendarDate);
        $numberOfDaysInMonth = date('t', $calendarDate);

        # Determine what day of the week the current month begins on, and what day
        # of the week the current month ends on.
        # Each of these are a number representing the weekday, 0-6.
        $weekdayOfTheFirstDay = date('w', mktime(0, 0, 0, $thisMonth, 1, $thisYear));
        $weekdayOfTheLastDay  = date('w', mktime(0, 0, 0, $thisMonth, $numberOfDaysInMonth, $thisYear));

        # $totalDayCount refers to the total number of days of this
        # month and the number of days from last month and next
        # month required to display seven days for each week for the
        # whole table.
        $totalDayCount  = $numberOfDaysInMonth + $weekdayOfTheFirstDay + (6 - $weekdayOfTheLastDay);
        $totalWeekCount = $totalDayCount / 7;
        $week           = 1;
        $day            = 1;
        $nextMonthDay   = 1;

        $calendarWeekdays = array();
        $calendarWeeks = '';
        $calendarWeekdayHeadings = array();

        for ($dayCount = 1; $dayCount <= $totalDayCount; $dayCount++)
        {
            $calendarDayClass = '';
            $calendarDayId    = '';
            $hasEvents         = false;

            if ($weekdayOfTheFirstDay > 0)
            {            
                # mktime knows that I mean "l" (as in L) number of days before
                # the month starts and adjusts the month and year appropriately.
                $calendarDayTimestamp = mktime(0, 0, 0, $thisMonth, 1 - $weekdayOfTheFirstDay, $thisYear);
                $calendarDayClass .= ' hCalendarLastMonth';
                $calendarDayId     = 'hCalendarLastMonth';
                $weekdayOfTheFirstDay--;
            }
            else if ($day <= $numberOfDaysInMonth)
            {
                # Midnight, Hour: 0, Minute: 0, Second: 0
                $calendarDayTimestamp = mktime(0, 0, 0, $thisMonth, $day, $thisYear);

                $calendarDayId = 'hCalendarThisMonth';

                $calendarDayClass .= ' hCalendarThisMonth';

                if (mktime(0, 0, 0, date('n'), date('j'), date('Y')) == $calendarDayTimestamp)
                {
                    $calendarDayClass .= ' hCalendarToday';
                }

                if ($day == 1)
                {
                    $calendarDayClass .= ' hCalendarFirst';
                }
                else if ($day == $numberOfDaysInMonth)
                {
                    $calendarDayClass .= ' hCalendarLast';
                }

                if (is_array($calendarEvents) && count($calendarEvents))
                {
                    foreach ($calendarEvents as $calendarEvent)
                    {
                        if ($calendarEvent >= $calendarDayTimestamp && $calendarEvent < ($calendarDayTimestamp + 86400))
                        {
                            $calendarDayClass .= ' hCalendarEvent';
                            $hasEvents = true;
                            break;
                        }
                    }
                }

                $day++;
            }
            else
            {
                $calendarDayTimestamp = mktime(0, 0, 0, $thisMonth + 1, $nextMonthDay, $thisYear);
                $calendarDayClass .= ' hCalendarNextMonth';
                $calendarDayId     = 'hCalendarNextMonth';
                $nextMonthDay++;
            }

            if ($week == 1)
            {
                $weekday = date($this->dateFormats['hCalendarWeekday'] == 'initial'? 'l' : $this->dateFormats['hCalendarWeekday'], $calendarDayTimestamp);

                if ($this->dateFormats['hCalendarWeekday'] == 'initial')
                {
                    $weekday = substr($weekday, 0, 1);
                }

                $calendarWeekdayHeadings['weekday'][] = $weekday;
            }

            $calendarWeekdays['dayHasEvents'][] = $hasEvents;
            $calendarWeekdays['dayClass'][]     = $calendarDayClass;
            # This is needed to keep ids unique when there are multiple views in the same page.
            $calendarWeekdays['dayId'][]        = $calendarDayId;
            $calendarWeekdays['dayTimestamp'][] = $calendarDayTimestamp;
            $calendarWeekdays['calendarDay'][]  = date($this->dateFormats['hCalendarDay'], $calendarDayTimestamp);
            $calendarWeekdays['day'][]          = date('d', $calendarDayTimestamp);

            # If $dayCount is evenly divisible by 7 get the week template
            if (!($dayCount % 7))
            {
                $calendarWeeks .= $this->getTemplate(
                    'Week',
                    array(
                        'weekdays' => $calendarWeekdays,
                        'uniqueId' => $calendarUniqueId
                    )
                );

                $calendarWeekdays = array();
                $week++;
            }
        }

        return $this->getTemplate(
            'Calendar',
            array(
                'class'          => $calendarUniqueId,
                'uniqueId'       => $calendarUniqueId,
                'date'           => mktime(0, 0, 0, $thisMonth, 1, $thisYear),
                'formattedMonth' => date($this->dateFormats['hCalendarMonth'], $calendarDate),
                'formattedYear'  => date($this->dateFormats['hCalendarYear'], $calendarDate),
                'weekdays'       => $calendarWeekdayHeadings,
                'weeks'          => $calendarWeeks,
                'offset'         => ($calendarOffset > 0? '+' : '').$calendarOffset,
                'month'          => date('m', $calendarDate),
                'year'           => date('Y', $calendarDate),
                'fiveWeeks'      => $week == 6
            )
        );
    }
}

# @description
# <h2 id='calendarViewHTMLSource'>Calendar View HTML Source</h2>
# <p>
#   See: <a href='/Hot Toddy/Documentation?hCalendar/hCalendarView'>hCalendar/hCalendarView</a> 
#   to see the HTML generated by this object.
# </p>
# <p>
#   The HTML source for a calendar view looks like this:
# </p>
# <code class='brush: html'>&lt;!-- Begin Hot Toddy Calendar --&gt;
# &lt;table class='hCalendar' id='hCalendar-1341115200' data-year='2012' data-month='07'&gt;
#     &lt;caption title='0'&gt;&lt;/caption&gt;
#     &lt;thead&gt;
#         &lt;tr&gt;
#             &lt;th class='hCalendarMonth' colspan='7'&gt;
#                 &lt;span class='hCalendarMonth'&gt;July&lt;/span&gt;
#                 &lt;span class='hCalendarYear'&gt;2012&lt;/span&gt;
#             &lt;/th&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;
#             &lt;th class='hCalendarWeekday'&gt;Sunday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Monday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Tuesday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Wednesday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Thursday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Friday&lt;/th&gt;
#             &lt;th class='hCalendarWeekday'&gt;Saturday&lt;/th&gt;
#         &lt;/tr&gt;
#     &lt;/thead&gt;
#     &lt;tbody&gt;
#         &lt;tr&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth hCalendarFirst' id='hCalendarThisMonth-hCalendar-1341115200' data-day='01'&gt;
#                 &lt;span class='hCalendarDay'&gt;1&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341201600' data-day='02'&gt;
#                 &lt;span class='hCalendarDay'&gt;2&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341288000' data-day='03'&gt;
#                 &lt;span class='hCalendarDay'&gt;3&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341374400' data-day='04'&gt;
#                 &lt;span class='hCalendarDay'&gt;4&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341460800' data-day='05'&gt;
#                 &lt;span class='hCalendarDay'&gt;5&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341547200' data-day='06'&gt;
#                 &lt;span class='hCalendarDay'&gt;6&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341633600' data-day='07'&gt;
#                 &lt;span class='hCalendarDay'&gt;7&lt;/span&gt;
#             &lt;/td&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341720000' data-day='08'&gt;
#                 &lt;span class='hCalendarDay'&gt;8&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341806400' data-day='09'&gt;
#                 &lt;span class='hCalendarDay'&gt;9&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341892800' data-day='10'&gt;
#                 &lt;span class='hCalendarDay'&gt;10&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1341979200' data-day='11'&gt;
#                 &lt;span class='hCalendarDay'&gt;11&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342065600' data-day='12'&gt;
#                 &lt;span class='hCalendarDay'&gt;12&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342152000' data-day='13'&gt;
#                 &lt;span class='hCalendarDay'&gt;13&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342238400' data-day='14'&gt;
#                 &lt;span class='hCalendarDay'&gt;14&lt;/span&gt;
#             &lt;/td&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342324800' data-day='15'&gt;
#                 &lt;span class='hCalendarDay'&gt;15&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth hCalendarToday' id='hCalendarThisMonth-hCalendar-1342411200' data-day='16'&gt;
#                 &lt;span class='hCalendarDay'&gt;16&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342497600' data-day='17'&gt;
#                 &lt;span class='hCalendarDay'&gt;17&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342584000' data-day='18'&gt;
#                 &lt;span class='hCalendarDay'&gt;18&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342670400' data-day='19'&gt;
#                 &lt;span class='hCalendarDay'&gt;19&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342756800' data-day='20'&gt;
#                 &lt;span class='hCalendarDay'&gt;20&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342843200' data-day='21'&gt;
#                 &lt;span class='hCalendarDay'&gt;21&lt;/span&gt;
#             &lt;/td&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1342929600' data-day='22'&gt;
#                 &lt;span class='hCalendarDay'&gt;22&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343016000' data-day='23'&gt;
#                 &lt;span class='hCalendarDay'&gt;23&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343102400' data-day='24'&gt;
#                 &lt;span class='hCalendarDay'&gt;24&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343188800' data-day='25'&gt;
#                 &lt;span class='hCalendarDay'&gt;25&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343275200' data-day='26'&gt;
#                 &lt;span class='hCalendarDay'&gt;26&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343361600' data-day='27'&gt;
#                 &lt;span class='hCalendarDay'&gt;27&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343448000' data-day='28'&gt;
#                 &lt;span class='hCalendarDay'&gt;28&lt;/span&gt;
#             &lt;/td&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343534400' data-day='29'&gt;
#                 &lt;span class='hCalendarDay'&gt;29&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth' id='hCalendarThisMonth-hCalendar-1343620800' data-day='30'&gt;
#                 &lt;span class='hCalendarDay'&gt;30&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarThisMonth hCalendarLast' id='hCalendarThisMonth-hCalendar-1343707200' data-day='31'&gt;
#                 &lt;span class='hCalendarDay'&gt;31&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarNextMonth' id='hCalendarNextMonth-hCalendar-1343793600' data-day='01'&gt;
#                 &lt;span class='hCalendarDay'&gt;1&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarNextMonth' id='hCalendarNextMonth-hCalendar-1343880000' data-day='02'&gt;
#                 &lt;span class='hCalendarDay'&gt;2&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarNextMonth' id='hCalendarNextMonth-hCalendar-1343966400' data-day='03'&gt;
#                 &lt;span class='hCalendarDay'&gt;3&lt;/span&gt;
#             &lt;/td&gt;
#             &lt;td class='hCalendarDay hCalendarNextMonth' id='hCalendarNextMonth-hCalendar-1344052800' data-day='04'&gt;
#                 &lt;span class='hCalendarDay'&gt;4&lt;/span&gt;
#             &lt;/td&gt;
#         &lt;/tr&gt;
#         &lt;tr&gt;&lt;td colspan='7' class='hCalendarEmptyWeek'&gt;&lt;/td&gt;&lt;/tr&gt;
#     &lt;/tbody&gt;
# &lt;/table&gt;
#&lt;!-- End Hot Toddy Calendar --&gt;</code>
# @end

?>