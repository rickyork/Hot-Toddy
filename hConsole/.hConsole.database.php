<?php
  class hConsoleDatabase extends hPlugin { private $timestamps = array( 'hErrorDate', 'hUserActivityTime', 'hFileLastAccessed', 'hUserCreated', 'hUserLastLogin', 'hUserLastFailedLogin', 'hUserLastModified' ); private $users = array( 'hUserId', 'hUserLastModifiedBy', 'hUserReferredBy' ); public function getErrors($limit = '0,20') {          return $this->hFrameworkErrors->select( array( 'SQL_CALC_FOUND_ROWS', 'hUserId', 'hFrameworkError', '@hFilePath', 'hPluginPath', 'hPluginLine', 'hFrameworkBackTrace', 'hFrameworkErrorDate', 'hUserAgent', 'hUserRemoteIP' ), array( ), 'AND', array( 'hFrameworkErrorDate', 'DESC' ), $limit ); } public function getStatusCodes($limit = '0,20') {          return $this->hFileStatusLog->select( array( 'SQL_CALC_FOUND_ROWS', 'hUserId', 'hFileStatusPath', 'hFileStatusCode', 'hFileStatusReferrerPath', 'hFileStatusAccessCount' ), array( ), 'AND', 'hFileStatusPath', $limit ); } public function getActivity($limit = '0,20') {          return $this->hUserActivityLog->select( array( 'SQL_CALC_FOUND_ROWS', 'hUserId', 'hUserActivity', 'hUserActivityComponent', 'hUserActivityTime', 'hUserActivityIP' ), array( ), 'AND', array( 'hUserActivityTime', 'DESC' ), $limit ); } public function getDocumentHistory($limit = '0,20') {          return $this->hFileUserStatistics->select( array( 'SQL_CALC_FOUND_ROWS', 'hUserId', 'hFileId', 'hFileAccessCount', 'hFileLastAccessed' ), array( ), 'AND', array( 'hFileLastAccessed', 'DESC' ), $limit ); } public function getUserLog($limit = '0,20', $sortBy = 'hUserLastLogin', $sortDirection = 'DESC') {          return $this->hUserLog->select( array( 'SQL_CALC_FOUND_ROWS', 'hUserId', 'hUserLoginCount', 'hUserFailedLoginCount', 'hUserCreated', 'hUserLastLogin', 'hUserLastFailedLogin', 'hUserLastModified', 'hUserLastModifiedBy', 'hUserReferredBy', 'hUserRegistrationTrackingId', 'hFileId' ), array( ), 'AND', array( $sortBy, $sortDirection ), $limit ); } public function getResultsForTemplate($query) {        $return = array(); $i = 0; foreach ($query as $data) { foreach ($data as $column => $value) { if (in_array($column, $this->timestamps)) { if (!empty($value)) { $value = date($this->hConsoleDateFormat('n/j/Y g:i:s a'), $value); } else { $value = ''; } } if (in_array($column, $this->users)) { if (!empty($value)) { $return[$column.'_hUserFullName'][$i] = $this->user->getFullName($value); $return[$column.'_hUserName'][$i] = $this->user->getUserName($value); } else { $value = ''; $return[$column.'_hUserFullName'][$i] = ''; $return[$column.'_hUserName'][$i] = ''; } } if ($column == 'hFileId') { $return['hFilePath'][$i] = $this->getFilePathByFileId($value); } $return[$column][$i] = $value; } $i++; } return $return; } } ?>