<?php
  class hFlickrLibrary extends hPlugin { private $phpFlickr; public function hConstructor() { error_reporting(0); include $this->hFrameworkLibraryPath.'/phpFlickr/phpFlickr.php'; if ($this->hFlickrKey && $this->hFlickrSecret) { $this->phpFlickr = new phpFlickr($this->hFlickrKey, $this->hFlickrSecret);   if($this->hFlickrToken) { $this->phpFlickr->setToken('72157623466888302-3a112fc8627e3eed'); }  } else { $this->warning('Either the Flickr API key or secret key is not set.', __FILE__, __LINE__); } }  public function getGroupPhotosByURL($url, $countPerPage = 6, $page = 1) { $group = $this->phpFlickr->urls_lookupGroup($url); $photos = $this->phpFlickr->groups_pools_getPhotos($group['id'], null, null, null, $countPerPage, $page); $urls = array(); foreach ($photos['photo'] as $photo) {  array_push( $urls, "<a href='http://www.flickr.com/photos/{$photo['owner']}/{$photo['id']}/in/pool-".basename($url)."' target='_blank'>". "<img src='".$this->phpFlickr->buildPhotoURL($photo, 'Square')."' alt='Flickr Photo' />". "</a>\n" ); } return $urls; } public function getUserPhotos($username, $countPerPage = 6, $page = 1) {  $person = $this->phpFlickr->people_findByUsername($username);  $photos_url = $this->phpFlickr->urls_getUserPhotos($person['id']);  $photos = $this->phpFlickr->people_getPublicPhotos($person['id'], null, null, $countPerPage, $page); $urls = array(); foreach ($photos['photos']['photo'] as $photo) { array_push( $urls, "<a href='{$photos_url}{$photo['id']}' target='_blank'><img src='".$phpFlickr->buildPhotoURL($photo, 'Square')."' alt='Flickr Photo' /></a>\n" ); } return $urls; } public function getRandomPhotosByURL($url, $countPerPage = 6) {  $group = $this->phpFlickr->urls_lookupGroup($url); $photos = $this->phpFlickr->groups_pools_getPhotos($group['id'], null, null, null, null, null);  shuffle($photos['photo']); $urls = array(); $i = 0; foreach ($photos['photo'] as $photo) { array_push( $urls, "<a href='http://www.flickr.com/photos/{$photo['owner']}/{$photo['id']}/in/pool-".basename($url)."' target='_blank'>". "<img src='".$this->phpFlickr->buildPhotoURL($photo, 'Square')."' alt='Flickr Photo' />". "</a>\n" );  $i++; if ($i >= $countPerPage) { break; } } return $urls; }  public function getPhotoSetThumbnail($photoset_id) { $info = array(); $photoset = $this->phpFlickr->photosets_getInfo($photoset_id); $info['URL'] = "http://www.flickr.com/photos/{$photoset['owner']}/sets/{$photoset['id']}"; $info['Title'] = $photoset['title']; $info['Thumbnail'] = $this->phpFlickr->buildPhotoURL( array( 'id'=>$photoset['primary'], 'farm'=>$photoset['farm'], 'server'=>$photoset['server'], 'secret'=>$photoset['secret'] ), 'small' ); return $info; }  public function getPhotoSet($photoset_id, $num_photos = null) { $photos = $this->phpFlickr->photosets_getPhotos($photoset_id, null, null, $num_photos); $info = $this->phpFlickr->photosets_getInfo($photoset_id); $html = "<div class=\"hFlickrPhotoSet\"><h3>{$info['title']}</h3><ul>"; foreach($photos['photoset']['photo'] as $photo) { $photoUrl = $this->phpFlickr->buildPhotoUrl($photo); $thumbUrl = $this->phpFlickr->buildPhotoUrl($photo, "square"); $html .= "<li><a href=\"$photoUrl\" title=\"{$photo['title']}\"><img src=\"$thumbUrl\" /></a></li>"; } $html .= "</ul></div>"; return $html; } } ?>