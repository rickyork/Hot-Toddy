<?php
  class hForumLibrary extends hPlugin { private $hSubscription; private $hForumDatabase; public function hConstructor() { $this->hForumDatabase = $this->database('hForum'); $this->hSubscription = $this->library('hSubscription'); } public function getUserRank($userId, $count) {       $users = array( array( 50, 'NewMember', 'New Member', '', 0 ), array( 100, 'BeginningMember', 'Beginning Member', 'starBronze.gif', 1 ), array( 200, 'IntermediateMember', 'Intermediate Member', 'starOrange.gif', 2 ), array( 500, 'Member', 'Member', 'starRed.gif', 3 ), array( 1000, 'SeniorMember', 'Senior Member', 4 ), array( 1000000, 'ExpertMember', 'Expert Member', 5 ) ); foreach ($users as $user) { if (false !== ($icon = $this->getUserThresholdIcon($count, $user[0], $user[1], $user[2], $user[3], $user[4]))) { break; } } $isEmployee = false; switch (true) { case $this->inGroup('Employees', $userId, false): { $icon = $this->getUserIcon('Employees', $this->hFrameworkName.' Employee', 'starSilver.gif', 5); $isEmployee = true; break; } case $this->isAdministrator($userId): { $icon = $this->getUserIcon('Administrator', 'Administrator', 'starGold.gif', 5); break; } case $this->isModerator($userId): { $icon = $this->getUserIcon('Moderator', 'Moderator', 'starSilver.gif', 5); break; } } $icon['html'] = ''; if ($isEmployee && $this->hFileLogoSmall) { $icon['html'] .= $this->getTemplate( 'Logo', array( 'hFileLogoSmall' => $this->hFileLogoSmall, 'hFrameworkName' => $this->hFrameworkName ) ); } return $icon; } private function getUserThresholdIcon($count, $threshold, $userTitle, $title, $icon, $count) {      if ($count < $this->{"hForum{$userTitle}Threshold"}($threshold, $this->hForumFileId)) { return $this->getUserIcon($userTitle, $title, $icon, $count); } return false; } private function getUserIcon($userTitle, $title, $icon, $count) {      return ( array( 'icon' => $this->{"hForum{$userTitle}Icon"}($icon, $this->hForumFileId), 'count' => $this->{"hForum{$userTitle}IconCount"}($count, $this->hForumFileId), 'title' => $this->{"hForum{$userTitle}Title"}($title, $this->hForumFileId) ) ); } public function getDate($timestamp, $userId) {        return ( $this->getTemplate( 'Date', array( 'Day' => date('m/d/y', $timestamp), 'Hour' => date('h:m:i A T', $timestamp), 'User' => $this->user->getUserName($userId) ) ) ); } public function getModerators($forumId, $forumTopicId) {        $users = $this->hForumDatabase->getModerators($forumTopicId); $links = array(); foreach ($users as $userId) { $links[] = $this->user->getUserName($userId); } return implode(', ', $links); } public function getPostTopic($forumPostId, $action = nil) {        $topic = $this->hForumDatabase->getThreadTopic($forumPostId); if ($action == 'reply' && !stristr($topic, 'Re:')) { $topic = 'Re: '.$topic; } return $topic; } public function hasEdit($userId = 0) {            return ( $this->hasPrivileges() || $ this->isLoggedIn() && !empty($userId) && (int) $this->hUserId === (int) $_SESSION['hUserId'] ); } public function hasPrivileges($userId = 0) {        $this->user->whichUserId($userId); return ( $this->hFiles->hasPermission($this->hForumFileId, 'rw', $userId) || $this->hForums->hasPermission($this->hForumId, 'rw', $userId) || $this->hForumTopics->hasPermission($this->hForumTopicId, 'rw', $userId) ); } public function isModerator($userId = 0) {        $this->user->whichUserId($userId); return $this->hForumTopics->hasPermission($this->hForumTopicId, 'rw', $userId); } public function isAdministrator($userId = 0) {        $this->user->whichUserId($userId); if ($this->hForumId) { return ( $this->hFiles->hasPermission($this->hForumFileId, 'rw', $userId) || $this->hForums->hasPermission($this->hForumId, 'rw', $userId) ); } else { return ( $this->hFiles->hasPermission($this->hForumFileId, 'rw', $userId) ); } } public function bbCodeToHTML($text) {        if (!class_exists('HTML_BBCoseParser')) { require_once 'PEAR.php'; require_once 'HTML/BBCodeParser.php'; } $text = htmlspecialchars($text);  $config = parse_ini_file($this->hFilePathToPEAR.'/HTML/BBCodeParser/example/BBCodeParser.ini', true); $options = PEAR::getStaticProperty('HTML_BBCodeParser', '_options'); $options = $config['HTML_BBCodeParser']; unset($options); $parser = new HTML_BBCodeParser();  $parser->setText($text); $parser->parse(); return nl2br($parser->getParsed()); } public function getLink($forumPostId = 0, $forumTopicId = 0, $forumId = 0, $postLink = false, $extraParameter = '') {        if (empty($forumPostId) && !$this->hForumThreads || $this->hForumThreads) { $forumPostId = $this->hForumPostId(0); } if (empty($forumTopicId)) { $forumTopicId = $this->hForumTopicId(0); } if (empty($forumId)) { $forumId = $this->hForumId(0); } $parameters = array( 'hForum' => $this->hForumFileId.'/'.$forumId.'/'.$forumTopicId.'/'.$forumPostId ); if ($postLink) { $parameters['hForumPostId'] = $forumPostId; } if (!empty($extraParameter)) { $parameters[$extraParameter] = 1; } return $this->hFilePath.'?'.$this->getQueryString($parameters); } public function getPostLink($parameter = '', $postId = 0) {        return $this->getLink($postId, 0, 0, true, $parameter); } } ?>