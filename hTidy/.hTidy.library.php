<?php
  class hTidyLibrary extends hPlugin { private $tidyPath; private $tidyExists = true; public function hConstructor() { $os = ''; switch ($this->hOS) { case 'Darwin': { $os = 'Mac OS X'; break; } case 'Linux': { $os = 'Linux'; break; } } $this->tidyPath = $this->hFrameworkLibraryPath.'/Tidy/'.$os.'/tidy'; if (!file_exists($this->tidyPath)) { $this->warning( 'HTML Tidy does not exist at the path: '.$this->tidyPath.'.', __FILE__, __LINE__ ); $this->tidyExists = false; } if (!is_executable($this->tidyPath)) { $this->warning( 'HTML Tidy is not executable. Path: '.$this->tidyPath.'.', __FILE__, __LINE__ ); $this->tidyExists = false; } } public function getHTML($html) { if (!$this->tidyExists) { return $html; } $path = escapeshellarg($this->tidyPath). ' --output-xhtml 1'. ' --indent-spaces 2'. ' --show-body-only 1'. ' --show-errors 0'. ' --quiet 1'. ' --clean 1'. ' --indent auto'. ' --vertical-space 0'. ' --uppercase-tags 0'. ' --drop-empty-paras 1'. ' --drop-proprietary-attributes 1'. ' --drop-font-tags 1'. ' --uppercase-attributes 0'. ' --word-2000 1'; $process = proc_open( $path, array( array('pipe', 'r'),  array('pipe', 'w'),  array('file', '/tmp/error-output.txt', 'a')  ), $pipes ); if (is_resource($process)) {     fwrite($pipes[0], $html); fclose($pipes[0]); $html = stream_get_contents($pipes[1]); fclose($pipes[1]);   $return_value = proc_close($process);  } return $html; } } ?>