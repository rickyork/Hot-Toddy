<?php
  class hPanel extends hPlugin { private $hFileIcon; public function hConstructor() { $this->hFileTitleAppend = ''; $this->hFileTitlePrepend = ''; $this->plugin('hApplication/hApplicationForm'); $this->getPluginFiles(); $panels = array(); $this->hFileIcon = $this->library('hFile/hFileIcon'); if ($this->hPanels && is_array($this->hPanels)) { foreach ($this->hPanels as $panel) { if (isset($panel->hPanelRequireGroup)) { if (!$this->inGroup($panel->hPanelRequireGroup)) { continue; } } if (isset($panel->hPanelName)) { $panels['hPanelName'][] = $panel->hPanelName; if (isset($panel->hPanelApplications) && is_array($panel->hPanelApplications)) { $panelApplications = array(); foreach ($panel->hPanelApplications as $panelApplication) { $fileId = $this->getFileIdByFilePath($panelApplication); if (empty($fileId)) { $fileId = $this->getFileIdByFilePath($panelApplication.'/index.html'); if (empty($fileId)) { $this->warning( "Unable to get an hFileId from application path, '{$panelApplication}'", __FILE__, __LINE__ ); } else { $directoryId = $this->getDirectoryId($panelApplication); } } else { $directoryId = $this->getDirectoryId(dirname($panelApplication)); } $fileIconId = $this->hDirectoryProperties->selectColumn( 'hFileIconId', $directoryId ); $panelApplications['hFileTitle'][] = $this->getFileTitle($fileId); $panelApplications['hFileIconPath'][] = $this->hFileIcon->getIconPathById( $fileIconId, '32x32' ); $panelApplications['hFilePath'][] = $panelApplication; } $panels['hPanelApplications'][] = $panelApplications; } else { $this->warning( "No applications defined for panel, ".$panel->hPanelName.'.', __FILE__, __LINE__ ); } } else { $this->warning( 'Panel definition found, but it is not named.', __FILE__, __LINE__ ); } } } $this->hFileDocument = $this->getTemplate( 'Panel', array( 'hPanels' => $panels ) ); } } ?>