<?php
  if (strstr($_SERVER['REQUEST_URI'], '&amp;')) { header('Location: //'.$_SERVER['HTTP_HOST'].str_replace('&amp;', '&', $_SERVER['REQUEST_URI'])); exit; } include_once 'hFramework.setup.php'; $hFramework->plugin('hFramework/hFrameworkEvent'); if (isset($_SERVER['HTTP_REFERER'])) { hString::safelyDecodeURL($_SERVER['HTTP_REFERER']); } if (isset($_SERVER['HTTP_HOST']) && strstr($hFramework->hServerHost, 'www.') && $_SERVER['HTTP_HOST'] == str_replace('www.', '', $hFramework->hServerHost)) { header('Location: //'.$hFramework->hServerHost.$_SERVER['REQUEST_URI']); exit; } @$uri = parse_url($_SERVER['REQUEST_URI']); if (!is_array($uri)) { $uri = array(); } foreach ($uri as $key => $value) {  hString::safelyDecodeURL($uri[$key]); } if (isset($uri['path'])) { if ($uri['path'] !== '/' && $hFramework->beginsPath($uri['path'], '/'.$hFramework->hFrameworkSite)) { header('Location: '.$hFramework->getEndOfPath($_SERVER['REQUEST_URI'], '/'.$hFramework->hFrameworkSite)); exit; } if ($hFramework->beginsPath($uri['path'], '/Sites')) { header('Location: '.$hFramework->getEndOfPath($_SERVER['REQUEST_URI'], '/Sites')); exit; } if ($uri['path'] == '/index.php') { header('Location: /index.html'); exit; } if ($uri['path'] == '/phpinfo') { $hFramework->fire->phpinfo(); date_default_timezone_set('America/New_York'); phpinfo(); exit; } if ($uri['path'] == '/time') { echo ((time() - (-date('Z'))) * 1000); exit; } } if ($hFramework->hFileShortURLEnabled(true)) { if (isset($uri['path']) && substr_count($uri['path'], '/') == 1 && is_numeric(basename($uri['path']))) { $uri['path'] = $hFramework->getFilePathByFileId( basename($uri['path']) ); } } if ($hFramework->hPath != '/') { if (isset($uri['path']) && $hFramework->beginsPath($uri['path'], $hFramework->hPath)) { $uri['path'] = $hFramework->getEndOfPath( $uri['path'], $hFramework->hPath ); } } if (isset($uri['path']) && $uri['path'] != '/') {  while (substr($uri['path'], -1) == '/') { $uri['path'] = substr($uri['path'], 0, -1); } $uri['path'] = preg_replace_callback('/\/+/', 'hFrameworkFixSlashes', $uri['path']); } if (!empty($uri['path'])) { $extension = $hFramework->getExtension($uri['path']); if (!empty($extension)) { $path = $hFramework->getIncludePath($hFramework->hServerDocumentRoot.$uri['path']); if (file_exists($path)) { $hFramework->hFileWildcardPath = $uri['path']; $hFramework->hFrameworkFilePath = true; $hFramework->setPath('/System/Applications/Library.plugin'); $hFramework->fire->libraryWildcardPath(); } } } if ($hFramework->hFileAliasesEnabled(false)) { $hFramework->plugin('hFile/hFileAlias'); } if (!$hFramework->hFileAliasPath(null)) { $hFramework->plugin('hFile/hFilePathWildcard'); } $hFramework->execute(); ?>