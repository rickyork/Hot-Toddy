<?php
  define('nil', null); function hFrameworkFixSlashes($matches) { return '/'; } function hFrameworkInclude($path) {                include_once $path; } function hFrameworkBenchmarkMicrotime() { list($usec, $sec) = explode(' ', microtime()); return ((float) $usec + (float) $sec); } define('hFrameworkBenchmarkStart', hFrameworkBenchmarkMicrotime()); $_SERVER['DOCUMENT_ROOT'] = dirname(dirname(__FILE__)); hFrameworkInclude(dirname(__FILE__).'/hFramework.php'); hFrameworkInclude($_SERVER['DOCUMENT_ROOT'].'/hString/hString.php'); hString::scrubRequestData();  function hFrameworkReset() {  $GLOBALS['hPlugins'] = array(); $GLOBALS['hFramework'] = new hFramework(); $GLOBALS['hPluginConfiguration'] = array(); $GLOBALS['hPluginCache'] = array(); $GLOBALS['hPluginData'] = array(); $GLOBALS['hDatabaseQueries'] = array(); $GLOBALS['hDatabaseOptimizeBenchmark'] = array(); $frameworkPath = dirname($_SERVER['DOCUMENT_ROOT']);    if (defined('hFrameworkInstall')) { $GLOBALS['hFramework']->hPluginInstallFiles = false; }  $GLOBALS['hConfLocation'] = $frameworkPath.'/Configuration/hFramework.conf'; $GLOBALS['hConf'] = array(); $GLOBALS['hConf'] = parse_ini_file($GLOBALS['hConfLocation']);   if (isset($_SERVER['HTTP_HOST'])) { if (substr_count($_SERVER['HTTP_HOST'], '.') == 3) {  $bits = explode('.', $_SERVER['HTTP_HOST']); $isIP = true; foreach ($bits as $bit) { if (!is_numeric($bit) || $bit < 0 || $bit > 255) { $isIP = false; } } if ($isIP) { $GLOBALS['hFramework']->hServerHost = $_SERVER['HTTP_HOST']; $GLOBALS['hFramework']->hServerHostIsIP = true; } } else if (strstr($_SERVER['HTTP_HOST'], ':') && substr_count($_SERVER['HTTP_HOST'], ':') > 1) {  $GLOBALS['hFramework']->hServerHost = $_SERVER['HTTP_HOST']; $GLOBALS['hFramework']->hServerHostIsIP = true; } } $GLOBALS['hFramework']->setVariables( array_merge( array( 'hPluginPath' => $_SERVER['DOCUMENT_ROOT'], 'hOS' => PHP_OS,  'hServerRequestURI' => isset($_SERVER['REQUEST_URI'])? $_SERVER['REQUEST_URI'] : '', 'hServerUserAgent' => isset($_SERVER['HTTP_USER_AGENT'])? $_SERVER['HTTP_USER_AGENT'] : '', 'hServerRequestQueryString' => isset($_SERVER['QUERY_STRING'])? $_SERVER['QUERY_STRING'] : '', 'hServerDocumentRoot' => $_SERVER['DOCUMENT_ROOT'], 'hFrameworkPath' => $frameworkPath, 'hDatabaseAssoc' => MYSQL_ASSOC, 'hDatabaseNum' => MYSQL_NUM, 'hDatabaseBoth' => MYSQL_BOTH, 'hDatabaseLinkName' => 'dblink' ), $GLOBALS['hConf'] ), false ); if ($GLOBALS['hFramework']->hFilePathToPEAR) { set_include_path($GLOBALS['hFramework']->hFilePathToPEAR); } else { set_include_path(dirname($_SERVER['DOCUMENT_ROOT']).'/Library/PEAR'); } define('hFrameworkPathToPHP', $GLOBALS['hFramework']->hFrameworkPathToPHP('/usr/bin/php'));  $GLOBALS['hDatabaseHost'] = $GLOBALS['hFramework']->hDatabaseHost; $GLOBALS['hDatabaseUser'] = $GLOBALS['hFramework']->hDatabaseUser; $GLOBALS['hDatabasePassword'] = $GLOBALS['hFramework']->hDatabasePassword; $GLOBALS['hDatabaseInitial'] = $GLOBALS['hFramework']->hDatabaseInitial; date_default_timezone_set($GLOBALS['hFramework']->hCalendarTimezone('America/New_York')); $driver = 'hDatabaseDriver_'.strtoupper($GLOBALS['hFramework']->hDatabaseDriver('MYSQLI')); $driverLowerCase = strtolower($GLOBALS['hFramework']->hDatabaseDriver('MYSQLI')); if (!class_exists($driver)) { hFrameworkInclude($_SERVER['DOCUMENT_ROOT'].'/hDatabase/hDatabaseDriver/hDatabaseDriver.'.$driverLowerCase.'.php'); } if (!class_exists('hDatabase')) { hFrameworkInclude($_SERVER['DOCUMENT_ROOT'].'/hDatabase/hDatabase.php'); } if (!class_exists('hDatabaseTable')) { hFrameworkInclude($_SERVER['DOCUMENT_ROOT'].'/hDatabase/hDatabaseTable/hDatabaseTable.php'); } $GLOBALS['hDB'] = new $driver($GLOBALS['hFramework']); $GLOBALS['hFramework']->hDB = &$GLOBALS['hDB']; $GLOBALS['hDatabase'] = new hDatabase($GLOBALS['hFramework']); $GLOBALS['hFramework']->hDatabase = &$GLOBALS['hDatabase']; $GLOBALS['hFramework']->defineTableObjects(); $GLOBALS['hFramework']->plugin('hFile/hFileDomain'); if (!isset($GLOBALS['hUserSessionLoaded'])) { $GLOBALS['hFramework']->plugin('hUser/hUserSession'); } if ($GLOBALS['hFramework']->hUserAgentEnabled(true)) { $GLOBALS['hFramework']->plugin('hUser/hUserAgent'); } } define('RFC822', 'D, d M Y H:i:s e'); hFrameworkReset(); define('hFrameworkErrorReportingDefault', E_STRICT); if (ini_get('register_globals')) { $hFramework->warning('The PHP configuration directive "register_globals" must be turned off.', __FILE__, __LINE__); } ?>