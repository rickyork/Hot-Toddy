<?php
  class hLocationCityLibrary extends hPlugin { public function hConstructor() { $this->uses('hLocationCities'); } public function getId($city, $stateId, $countryId = 223) {        return $this->hLocationCities->selectColumn( 'hLocationCityId', array( 'hLocationCity' => $city, 'hLocationStateId' => $stateId, 'hLocationCountryId' => $countryId ) ); } public function exists($city, $stateId, $countryId = 223) {         return $this->hLocationCities->selectExists( 'hLocationCityId', array( 'hLocationCity' => $city, 'hLocationStateId' => $stateId, 'hLocationCountryId' => $countryId ) ); } public function getLatitudeLongitude($locationCityId) {        return $this->hLocationCities->selectAssociative( array( 'hLocationCityLatitude', 'hLocationCityLongitude' ), $locationCityId ); } public function setLatitudeLongitude($locationCityId, $latitude, $longitude) {        $this->hLocationCities->modify(); $this->hLocationCities->update( array( 'hLocationCityLatitude' => (float) $latitude, 'hLocationCityLongitude' => (float) $longitude ), (int) $locationCityId ); } public function save($columns) {           if (!isset($columns['hLocationCityId']) || empty($columns['hContactCity']) || empty($columns['hLocationStateId'])) { return false; } if (!empty($columns['hLocationCityId'])) { return $this->update($columns); } else { return $this->insert($columns); } } public function insert($columns) {        if (empty($columns['hLocationCity']) || empty($columns['hLocationStateId'])) { return false; } $this->hLocationCities->modify(); return $this->hLocationCities->insert( array( 'hLocationCityId' => 0, 'hLocationCity' => $columns['hLocationCity'], 'hLocationCountyId' => isset($columns['hLocationCountyId'])? $columns['hLocationCountyId'] : 0, 'hLocationStateId' => $columns['hLocationStateId'], 'hLocationCountryId' => empty($columns['hLocationCountryId'])? 223 : (int) $columns['hLocationCountryId'], 'hLocationCityLatitude' => !empty($columns['hLocationCityLatitude'])? (float) $columns['hLocationCityLatitude'] : 0, 'hLocationCityLongitude' => !empty($columns['hLocationCityLongitude'])? (float) $columns['hLocationCityLongitude'] : 0, 'hLocationCityCreated' => time(), 'hLocationCityLastModifiedBy' => $this->isLoggedIn()? (int) $_SESSION['hUserId'] : 0 ) ); } public function update($columns) {        $this->hLocationCities->modify(); return $this->hLocationCities->update( array( 'hLocationCity' => $columns['hLocationCity'], 'hLocationCountyId' => isset($columns['hLocationCountyId'])? $columns['hLocationCountyId'] : 0, 'hLocationStateId' => $columns['hLocationStateId'], 'hLocationCountryId' => empty($columns['hLocationCountryId'])? 223 : (int) $columns['hLocationCountryId'], 'hLocationCityLatitude' => !empty($columns['hLocationCityLatitude'])? (float) $columns['hLocationCityLatitude'] : 0, 'hLocationCityLongitude' => !empty($columns['hLocationCityLongitude'])? (float) $columns['hLocationCityLongitude'] : 0, 'hLocationCityLastModified' => time(), 'hLocationCityLastModifiedBy' => $this->isLoggedIn()? (int) $_SESSION['hUserId'] : 0 ), array( 'hLocationCityId' => (int) $columns['hLocationCityId'] ) ); } } ?>