<?php
  class hUserService extends hService { private $hUserDatabase; private $hSearchDatabase; private $hSearch; private $hUserLoginInformation; public function hConstructor() { if (!$this->isLoggedIn()) { $this->JSON(-6); return; } if (!empty($_GET['hContactConf'])) { $this->loadConfigurationFile( $this->hFrameworkConfigurationPath.'/hContact '.hString::scrubString($_GET['hContactConf']) ); } $this->hUserDatabase = $this->database('hUser'); } private function validatedRequest() {          if ($this->inAnyOfTheFollowingGroups(array('Website Administrators', 'Contact Administrators', 'User Administrators'))) { return true; } if (!$this->hContactAddressBooks->hasPermission(1, 'r')) {   if (isset($_GET['hContactId'])) { if (!$this->hContacts->hasPermission((int) $_GET['hContactId'], 'r')) { $this->JSON(-1); return false; } } else { $this->JSON(-1); return false; } } return true; } public function getLoginInformation() {                    if (!$this->validatedRequest()) { return; } $userId = (int) $this->get('userId', 0); $contactId = (int) $this->get('contactId', 0);  if (!$userId && !$contactId) { $this->JSON(-5); return; } $loginInformation = $this->hUserDatabase->getLoginInformation($userId, $contactId); $loginInformation['hUserHistory'] = $this->getTemplate( 'History', array( 'hFiles' => $loginInformation['hUserHistory'] ) ); $loginInformation['hUserActivity'] = $this->getTemplate( 'Recent Activity', array( 'activities' => $loginInformation['hUserActivity'] ) ); $this->JSON($loginInformation); } public function getActivity() {                   if (!$this->validatedRequest()) { return; } $cursor = $this->get('searchCursor', 'cursor', nil); $userId = (int) $this->get('userId', 0); if (!$cursor || !$userId) { $this->JSON(-5); return; } $data = $this->hUserDatabase->getActivities($userId); $this->JSON( array( 'activities' => $this->getTemplate( 'Recent Activity', array( 'activities' => $data['activity'] ) ), 'pagination' => $data['pagination'] ) ); } public function getDocumentHistory() {                    if (!$this->validatedRequest()) { return; } $cursor = $this->get('searchCursor', 'cursor', nil); $userId = (int) $this->get('userId', 0); if (!$cursor || !$userId) { $this->JSON(-5); false; } $data = $this->hUserDatabase->getDocumentHistories($userId); $this->JSON( array( 'history' => $this->getTemplate( 'History', array( 'hFiles' => $data['history'] ) ), 'pagination' => $data['pagination'] ) ); } public function addUserToGroup() {                   if (!$this->validatedRequest()) { return; } $userGroupId = (int) $this->get('userGroupId', 0); $userId = (int) $this->get('userId', 0); if (!$userGroupId || !$userId) { $this->JSON(-5); return; } $this->hUserDatabase->addUserToGroup($userGroupId, $userId); $this->JSON(1); } } ?>