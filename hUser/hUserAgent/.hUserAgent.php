<?php
  class hUserAgent extends hPlugin { private $hUserAgentLib; public function hConstructor() { switch (true) { case isset($_GET['interfaceIdiomIsDesktop']): { $this->setUIIdiomForSession( true, false, false, false ); break; } case isset($_GET['interfaceIdiomIsPad']): { $this->setUIIdiomForSession( false, true, false, false ); break; } case isset($_GET['interfaceIdiomIsPhone']): { $this->setUIIdiomForSession( false, false, true, false ); break; } case isset($_GET['interfaceIdiomIsTV']): { $this->setUIIdiomForSession( false, false, false, true ); break; } } unset($_GET['interfaceIdiomIsDesktop'], $_GET['interfaceIdiomIsPad'], $_GET['interfaceIdiomIsPhone'], $_GET['interfaceIdiomIsTV']); if (isset($_GET['hGoogleChromeFrame'])) { $GLOBALS['hFramework']->hGoogleChromeFrame = (int) $_GET['hGoogleChromeFrame']; } $userAgent = $this->library('hUser/hUserAgent'); if (!isset($_SERVER['HTTP_USER_AGENT'])) { $_SERVER['HTTP_USER_AGENT'] = 'Terminal'; } $variables = $userAgent->parse($_SERVER['HTTP_USER_AGENT']); switch (true) { case !empty($_SESSION['interfaceIdiomIsDesktop']): { $this->forceUIIdiom( $variables, $userAgent, true, false, false, false ); break; } case !empty($_SESSION['interfaceIdiomIsPad']): { $this->forceUIIdiom( $variables, $userAgent, false, true, false, false ); break; } case !empty($_SESSION['interfaceIdiomIsPhone']): { $this->forceUIIdiom( $variables, $userAgent, false, false, true, false ); break; } case !empty($_SESSION['interfaceIdiomIsTV']): { $this->forceUIIdiom( $variables, $userAgent, false, false, false, true ); break; } } $this->hUserAgentOS = $userAgent->os; $this->hUserAgentOSVersion = $userAgent->osVersion; $this->hUserAgent = $userAgent->browser; $this->hUserAgentVersion = (float) $userAgent->browserVersion; $this->hUserAgentIsMobile = $userAgent->isMobile; $this->hUserAgentPrefix = $userAgent->vendorPrefix; } private function setUIIdiomForSession($desktop, $pad, $phone, $tv) { $_SESSION['interfaceIdiomIsDesktop'] = $desktop; $_SESSION['interfaceIdiomIsPad'] = $pad; $_SESSION['interfaceIdiomIsPhone'] = $phone; $_SESSION['interfaceIdiomIsTV'] = $tv; } private function forceUIIdiom(&$variables, &$userAgent, $desktop, $pad, $phone, $tv) { $userAgent->interfaceIdiomIsDesktop = $desktop; $userAgent->interfaceIdiomIsPad = $pad; $userAgent->interfaceIdiomIsPhone = $phone; $userAgent->interfaceIdiomIsTV = $tv; $variables['interfaceIdiomIsDesktop'] = $desktop; $variables['interfaceIdiomIsPad'] = $pad; $variables['interfaceIdiomIsPhone'] = $phone; $variables['interfaceIdiomIsTV'] = $tv; switch (true) { case $desktop: { $userAgent->interfaceIdiom = 'Desktop'; $variables['interfaceIdiom'] = 'Desktop'; $userAgent->isMobile = false; $variables['isMobile'] = false; $userAgent->isDesktop = true; $variables['isDesktop'] = true; break; } case $pad: { $userAgent->interfaceIdiom = 'Pad'; $variables['interfaceIdiom'] = 'Pad'; $userAgent->isMobile = true; $variables['isMobile'] = true; $userAgent->isDesktop = false; $variables['isDesktop'] = false; break; } case $phone: { $userAgent->interfaceIdiom = 'Phone'; $variables['interfaceIdiom'] = 'Phone'; $userAgent->isMobile = true; $variables['isMobile'] = true; $userAgent->isDesktop = false; $variables['isDesktop'] = false; break; } case $tv: { $userAgent->interfaceIdiom = 'TV'; $variables['interfaceIdiom'] = 'TV'; $userAgent->isMobile = false; $variables['isMobile'] = false; $userAgent->isDesktop = false; $variables['isDesktop'] = false; break; } } } } ?>