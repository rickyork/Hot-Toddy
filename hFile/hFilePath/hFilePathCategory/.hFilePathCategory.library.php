<?php
  class hFilePathCategoryLibrary extends hPlugin { public function isCategoryPath($path) {            return ($this->beginsPath($path, '/Categories') || $this->isHomeCategoryPath($path)); } public function isHomeCategoryPath($path) {            return preg_match('!^/Users/.+/Categories/.+$!', $path); } public function getCategoryPath($categoryId) {        $categories = array(); if ($categoryId > 0) { while ($categoryId > 0) { $data = $this->hCategories->selectAssociative( array( 'hCategoryId', 'hCategoryName', 'hCategoryParentId' ), (int) $categoryId ); if (count($data)) { array_push($categories, $data['hCategoryName']); $categoryId = $data['hCategoryParentId']; } } return '/Categories/'.implode('/', array_reverse($categories)); } else { return '/Categories'; } } public function getCategoryIdFromPath($filePath) {        if (empty($filePath) || !strstr($filePath, '/')) { return 0; } $categories = explode('/', $filePath); if (!isset($categories[0]) || !is_array($categories)) { return 0; } array_shift($categories); if ($categories[0] == 'Categories') { array_shift($categories); } else if ($categories[0] == 'Users') { array_shift($categories); array_shift($categories); } else { return 0; } $parentId = 0; if (count($categories)) { foreach ($categories as $category) { $query = $this->hCategories->selectQuery( 'hCategoryId', array( 'hCategoryName' => $category, 'hCategoryParentId' => $parentId ) ); if ($this->hDatabase->resultsExist($query)) { $parentId = $this->hDatabase->getColumn($query); } else {  return false; } } } return $parentId; } public function categoryExists($categoryPath) {        if ($categoryPath == '/Categories') { return true; } else { return $this->getCategoryIdFromPath($categoryPath) > 0; } return false; } } ?>