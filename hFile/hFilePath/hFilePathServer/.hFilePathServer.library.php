<?php
  class hFilePathServerLibrary extends hPlugin { public function isServerPath($path, $exactMatch = false) {                                       if (!$exactMatch) { return $this->beginsPath( $path, array( '/System/Server', '/System/Framework', '/System/Documents', $this->hFrameworkPicturesRoot, $this->hFrameworkLibraryRoot ) ); } else { return in_array( $path, array( '/System/Server', '/System/Framework', '/System/Documents', $this->hFrameworkPicturesRoot, $this->hFrameworkLibraryRoot ) ); } } public function getVirtualFileSystemPath($path) {                                                  switch (true) { case $this->beginsPath($path, $this->hFrameworkPicturesPath): { return $this->hFrameworkPicturesRoot.$this->getEndOfPath($path, $this->hFrameworkPicturesPath); } case $this->beginsPath($path, $this->hFrameworkLibraryPath): { return $this->hFrameworkLibraryRoot.$this->getEndOfPath($path, $this->hFrameworkLibraryPath); } case $this->beginsPath($path, $this->hFrameworkPath): { return '/System/Framework'.$this->getEndOfPath($path, $this->hFrameworkPath); } case $this->beginsPath($path, $this->hFileSystemPath): { return '/System/Documents'.$this->getEndOfPath($path, $this->hFileSystemPath); } default: { return '/System/Server'.$path; } } } public function getServerFileSystemPath($path) {            switch (true) { case $this->beginsPath($path, '/System/Server'): { $path = $this->getEndOfPath($path, '/System/Server'); if (empty($path)) { $path = '/'; } return $path; } case $this->beginsPath($path, '/System/Documents'): { return $this->hFileSystemPath.$this->getEndOfPath($path, '/System/Documents'); } case $this->beginsPath($path, '/System/Framework'): { return $this->hFrameworkPath.$this->getEndOfPath($path, '/System/Framework'); } case $this->beginsPath($path, $this->hFrameworkPicturesRoot): { return $this->hFrameworkPicturesPath.$this->getEndOfPath($path, $this->hFrameworkPicturesRoot); } case $this->beginsPath($path, $this->hFrameworkLibraryRoot): { return $this->hFrameworkLibraryPath.$this->getEndOfPath($path, $this->hFrameworkLibraryRoot); } default: { return $path; } } } } ?>