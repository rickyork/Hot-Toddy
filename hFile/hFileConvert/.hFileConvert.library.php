<?php
  class hFileConvertLibrary extends hPlugin { private $path; public function hConstructor() { $this->path = $this->hFileConvertCommandPath('/usr/local/bin'); } public function executeConvertFileCommand($command, $arguments) { switch ($command) { case 'textutil': { $command = '/usr/bin/textutil'; break; } default: { $command = $this->path.'/'.$command; } } if (is_executable($command)) { $descriptor = array( 0 => array("pipe", "r"),  1 => array("pipe", "w"),  2 => array("file", "/tmp/hFramework.txt", "a")  ); $pipes = array(); $process = proc_open( $command.' '.$arguments, $descriptor, $pipes ); if (is_resource($process)) {     fclose($pipes[0]); $output = stream_get_contents($pipes[1]); fclose($pipes[1]);   $return = proc_close($process); $this->verbose( "Command {$command} exited with return value {$return}.", __FILE__, __LINE__ ); } return isset($output)? $output : nil; } else { $this->warning( 'Command '.$command.' is not executable.', __FILE__, __LINE__ ); } }               public function getPlainText($file, $mime = nil, $charset = nil) { if (file_exists($file)) { $extension = $this->getExtension($file); switch ($extension) { case 'pdf': { if (file_exists($this->path.'/pdftotext')) { return $this->executeConvertFileCommand( 'pdftotext', '"'.$file.'" -' ); } else { $this->notice( 'Text could not be extracted from the PDF because the pdftotext '. 'command is not installed to '.$this->path.'.', __FILE__, __LINE__ ); } return ''; } case 'xls': { if (file_exists($this->path.'/xls2csv')) { return $this->executeConvertFileCommand( 'xls2csv', '"'.$file.'"' ); } else { $this->notice( 'Text could not be extracted from the XLS because the xls2csv '. 'command is not installed to '.$this->path.'.', __FILE__, __LINE__ ); } return ''; } case 'doc': { if ($this->hOS != 'Darwin' && file_exists($this->path.'/catdoc')) { return $this->executeConvertFileCommand( 'catdoc', '"'.$file.'"' ); } } case 'docx': case 'html': case 'rtf': case 'rtfd': case 'webarchive': { if ($this->hOS == 'Darwin') { return $this->executeConvertFileCommand( 'textutil', '-stdout -convert txt "'.$file.'"' ); } } default: { if (!empty($mime)) { if (substr($mime, 0, 5) == 'text/' || $charset == 'us-ascii') { return file_get_contents($file); } else { switch ($mime) { case 'application/javascript': case 'application/xml': case 'application/xhtml+xml': { return file_get_contents($file); } } } } return ''; } } } else { $this->warning( 'File conversion to plain text failed because the file: '.$file.' does not exist.', __FILE__, __LINE__ ); } } } ?>