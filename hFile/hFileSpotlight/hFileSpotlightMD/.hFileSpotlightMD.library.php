<?php
  class hFileSpotlightMDLibrary extends hPlugin { public function hConstructor() { } public function get($path) {                                                                                                                                                                                                                              $escapedPath = escapeshellarg($path); $metaData = `mdls {$escapedPath}`; $metaData = str_replace('(null)', 0, $metaData); preg_match_all('/\w{1,}\s{1,}=\s{1,}\d{1,}.*/', $metaData, $numericProperties); $data = array(); if (isset($numericProperties[0]) && is_array($numericProperties[0])) { foreach ($numericProperties[0] as $metaItem) { list($property, $value) = explode('=', $metaItem); $property = trim(str_replace('kMDItem', '', $property)); $value = trim($value); switch ($property) { case 'ContentCreationDate': case 'ContentModificationDate': case 'FSContentChangeDate': case 'FSCreationDate': case 'LastUsedDate': {  $value = strtotime($value); break; } case 'FSSize': { if (!$value) { $value = $this->bytes(filesize($path)); } else { $value = $this->bytes($value); } break; } } $data[$property] = $value; } } preg_match_all('/\w{1,}\s{1,}=\s{1,}".*"/', $metaData, $stringProperties); if (isset($stringProperties[0]) && is_array($stringProperties[0])) { foreach ($stringProperties[0] as $metaItem) { list($property, $value) = explode('=', $metaItem); $property = trim(str_replace('kMDItem', '', $property)); $value = trim($value);  if (substr($value, 0, 1) == '"') { $value = substr($value, 1); } if (substr($value, -1, 1) == '"') { $value = substr($value, 0, -1); } $data[$property] = $value; } } preg_match_all('/\w{1,}\s{1,}=\s{1,}\(.*\)/Ums', $metaData, $multiProperties); if (isset($multiProperties[0]) && is_array($multiProperties[0])) { foreach ($multiProperties[0] as $metaItem) { list($property, $value) = explode('=', $metaItem); $property = trim(str_replace('kMDItem', '', $property)); $value = trim($value);  if (substr($value, 0, 1) == '(') { $value = substr($value, 1); } if (substr($value, -1, 1) == ')') { $value = substr($value, 0, -1); } $value = trim($value); $items = explode(',', $value); $value = array(); foreach ($items as $item) { $item = trim($item);  if (substr($item, 0, 1) == '"') { $item = substr($item, 1); } if (substr($item, -1, 1) == '"') { $item = substr($item, 0, -1); } if ($property == 'UsedDates') { $item = strtotime($item); } array_push($value, $item); } $data[$property] = $value; } } return $data; } } ?>