<?php
  class hFileBreadcrumbs extends hPlugin { public function getBreadcrumbs() {                   if (!$this->hFileBreadcrumbs) { $this->hFileBreadcrumbs = $this->getFileBreadcrumbs(); } return $this->hFileBreadcrumbs; } public function getFileBreadcrumbs($fileId = 0, $custom = false, $linkToSelf = false) {                                                         if ($this->hFileBreadcrumbs) { return $this->hFileBreadcrumbs; } if (empty($fileId)) { $fileId = $this->hFileId; $parentId = $this->hFileParentId; } if (!empty($fileId)) { $parentId = $this->getFileParentId((int) $fileId); } $files = array(); while ($parentId > 0) { $data = $this->getFileInformation($parentId); $files[] = $data; $parentId = $data['hFileParentId']; } $files = array_reverse($files); $breadcrumbs = array(); foreach ($files as $file) { $breadcrumbs['hFileId'][] = $file['hFileId']; $breadcrumbs['hFileTitle'][] = $this->translate( hString::decodeHTML( $this->hFileBreadcrumbTitle( $file['hFileTitle'], $file['hFileId'] ) ) ); $breadcrumbs['hFilePath'][] = $file['hFilePath']; } $linkToFile = ($fileId != $this->hFileId); return $this->getTemplate( 'Breadcrumbs', array( 'hFileBreadcrumbs' => $breadcrumbs, 'hFileBreadcrumbSeparatorClass' => $this->hFileBreadcrumbSeparatorClass('BreadcrumbSeparator'), 'hFileBreadcrumbHereClass' => $this->hFileBreadcrumbHereClass('BreadcrumbHere'), 'hFileBreadcrumbSeparator' => $this->hFileBreadcrumbSeparator('&rarr;'), 'hFileBreadcrumbHomePath' => $this->hFileBreadcrumbsHomePath('/index.html'), 'hFileBreadcrumbHomeLabel' => $this->translate( $this->hFileBreadcrumbHomeLabel('Home') ), 'linkToFile' => $linkToFile, 'hFileBreadcrumbPath' => $linkToFile? $this->getFilePathByFileId($fileId) : '', 'hFileBreadcrumbTitle' => $linkToFile? $this->translate( $this->hFileBreadcrumbTitle( $this->getFileTitle($fileId), $fileId ) ) : '', 'linkToSelf' => $linkToSelf, ) ); } public function makeBreadcrumbs($crumbs, $prependLineage = false, $fileId = 0) { if (is_array($crumbs)) { foreach ($crumbs as $link => $text) { $html .= $this->getTemplate( 'Make Breadcrumbs', array( 'hFileBreadcrumbSeparatorClass' => $this->hFileBreadcrumbSeparatorClass('BreadcrumbSeparator'), 'hFileBreadcrumbSeparator' => $this->hFileBreadcrumbSeparator('&rarr;'), 'hFileBreadcrumbPath' => $link, 'hFileBreadcrumbTitle' => $text, 'linkToSelf' => $link == 'self', 'hFileBreadcrumbHereClass' => $this->hFileBreadcrumbHereClass('BreadcrumbHere'), ) ); } if ($prependLineage) { $this->hFileBreadcrumbHereClass = ''; $html = $this->getFileBreadcrumbs($fileId, true, true).$html; } $this->hFileBreadcrumbs = $html; } }       public function getFileLineage($fileParentId = 0, $line = array()) { if (empty($line)) { $line[] = $this->hFileId; } if ($parentId != 0) { $line[] = (int) $fileParentId; $line = $this->getFileLineage( $this->hFiles->selectColumn( 'hFileParentId', (int) $fileParentId ), $line ); } return $line; } } ?>