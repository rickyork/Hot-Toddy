<?php
  class hDocumentationService extends hService { private $hDocumentation; public function hConstructor() { $this->hDocumentation = $this->library('hDocumentation'); } public function search() {             if (!isset($_GET['search']) || !isset($_GET['option'])) { $this->JSON(-5); return; } if (empty($_GET['search'])) { $_GET['search'] = 'h'; } switch ($_GET['option']) { case 'methods': { $html = $this->hDocumentation->searchMethods( $_GET['search'] ); break; } case 'files': default: { $html = $this->hDocumentation->searchFiles( $_GET['search'] ); } } $this->HTML($html); } public function getMethods() {        if (!isset($_GET['documentationFileId'])) { $this->JSON(-5); return; } $this->HTML( $this->hDocumentation->getMethodsTemplate( (int) $_GET['documentationFileId'] ) ); } public function getMethodArguments() {        if (!isset($_GET['methodId'])) { $this->JSON(-5); return; } $this->HTML( $this->getTemplate( 'Arguments', array( 'arguments' => $this->hDocumentation->getMethodArguments( (int) $_GET['methodId'] ) ) ) ); } } ?>